---
title: "01_load.qmd"
format: html
editor: visual
---

## Load packages

```{r}
#| output: false
#| warning: false
library(tidyverse)
library(httr)
set.seed(1)
#library(readr)
```

## Load data

```{r}
data <- read_tsv("../data/data_joined.tsv")

head(data)

genes <- colnames(data)[25:length(colnames(data))]

columns_to_keep <- c("Metastasis", "Smoking", genes)
```

## Clean Data:

```{r}
# Cleaning the data:
data_clean <- data |>
  relocate(Metastasis) |>
  select(all_of(columns_to_keep))

# Making the dataset long:
data_clean_long <- data_clean |> 
  pivot_longer(
    cols=-c(Metastasis, Smoking),
    names_to = "gene",
    values_to = "gene_expression") 

data_clean_long
```

```{r}

sum(duplicated(data_aug_log$log2_fold_change))

tes <- data_aug_log |> arrange(log2_fold_change) |> 
  mutate(remove=if_else( (duplicated(log2_fold_change)) & duplicated(p_value) & duplicated(gene) & duplicated(Smoking), "r", "k")) |> 
  filter(remove == max(remove["r"]) | remove == "k")

your_tibble <- your_tibble %>% 
  distinct(columnX, .keep_all = TRUE)

tes2 <- data_aug_log |> 
  distinct(log2_fold_change, p_value, gene, Smoking, .keep_all = T)

unique(tes$remove)
tes

sum(duplicated(tes2$p_value))
```

## Analysis 1: Volcano plot

```{r}
data_aug_log |> 
  mutate(log_10_p = -log10(p_value)) |> 
  ungroup() |> 
#  sample_n(3000) |> 
  ggplot(mapping = aes(x = log2_fold_change,
                       y = log_10_p,
                       color=is_significant)) +
  geom_point(size = 1) +
#  xlim(-0.2,0.2) +
#  ylim(0,3) +
  theme(legend.position = "none") + 
  theme_minimal() +
  labs(title="Genes titlea", 
       subtitle = "Genes highlighted in turquoise are significant",
     x = "Estimates",
     caption = "Data from DOI: doi", 
     y = "-log10(p)")
```

```{r}
gene_diff_exp |> 
  mutate(log_10_p = -log10(p_value)) |> 
  ungroup() |> 
  sample_n(7000) |> 
  ggplot(mapping = aes(x = log2_fold_change,
                       y = log_10_p,
                       color=Smoking)) +
  geom_point(size = 1) +
  geom_hline(yintercept=2) +
  xlim(-0.2,0.2) +
  ylim(0,3) +
  theme(legend.position = "none") + 
  theme_minimal() +
  labs(title="Genes titlea", 
       subtitle = "Genes highlighted in turquoise are significant",
     x = "Estimates",
     caption = "Data from DOI: doi", 
     y = "-log10(p)")
```

```{r}
-log10(0.01)
```

## Analysis 2: Smoking vs gene up-/down regulation

```{r}

most_sig_genes <- gene_diff_exp |> 
  group_by(gene) |> 
  summarise(mean_pval = mean(p_value), mean_log2 = mean(log2_fold_change)) |> 
  slice_min(order_by = mean_pval, n=5)

most_sig_genes_list <- most_sig_genes |> 
  select(gene) |> 
  as.list()

most_sig_genes_list <- most_sig_genes_list[[1]]

most_sig_genes_list
most_sig_genes
```

```{r}

gene_diff_exp_2 <- gene_diff_exp |> 
  filter(gene %in% most_sig_genes_list) #|> 
#  mutate(mean_log2fold = mean(log2_fold_change)) |> 
#  mutate(check = if_else(condition = (mean_log2fold > 0 & log2_fold_change > 0) | (mean_log2fold < 0 & log2_fold_change < 0), "keep", "remove")) |> 
#  ungroup()


mutate(check = if_else(condition = (mean_log2fold > 0 & log2_fold_change > 0) | (mean_log2fold < 0 & log2_fold_change < 0), "keep", "remove")) 
 
# Everything is keep???
sum(gene_diff_exp_2$check== "remove")

length(unique(gene_diff_exp$gene))
  
# Choose up vs down regulated genes only. (depending ...)
# Count number of samples with this upregulated gene
# Calculate percentage of Former, Current, and Not smoker. 
# Make the stacked barchart. 
  
  
perc <- perc %>%
  group_by(Type, Stream_Order) %>%
  mutate(percentage = n[Group == 'all']/n[Group == 'all']*100) %>%
  ungroup


gene_diff_exp
```
